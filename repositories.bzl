# Generated by `@bazel_federation//py/bazel_federation:generate_repositories`.
# DO NOT EDIT.

"""Defines load functions for all repositories that are part of the federation.

WARNING: The following definitions are placeholders since none of the projects
have been tested at the versions listed in this file.
Please do not use them (yet). Future commits to this file will set the proper
versions and ensure that all dependencies are correct.
"""

load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
load("//:third_party_repositories.bzl", _declare_jinja2 = "jinja2", _declare_markupsafe = "markupsafe", _declare_mistune = "mistune", _declare_org_golang_x_sys = "org_golang_x_sys", _declare_org_golang_x_tools = "org_golang_x_tools", _declare_zlib = "zlib")

def _declare_bazel():
    """Loads `@bazel` if it does not exist.

    Unlike `bazel()`, this function does not load any (transitive) dependencies."""

    # `bazel` is of type "forward" and does not declare a repository.
    pass

def _declare_bazel_gazelle():
    """Loads `@bazel_gazelle` if it does not exist.

    Unlike `bazel_gazelle()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "bazel_gazelle",
        sha256 = "7949fc6cc17b5b191103e97481cf8889217263acf52e00b560683413af204fcb",
        urls = [
            "https://github.com/bazelbuild/bazel-gazelle/releases/download/0.16.0/bazel-gazelle-0.16.0.tar.gz",
        ],
    )

def _declare_bazel_skylib():
    """Loads `@bazel_skylib` if it does not exist.

    Unlike `bazel_skylib()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "bazel_skylib",
        sha256 = "97e70364e9249702246c0e9444bccdc4b847bed1eb03c5a3ece4f83dfe6abc44",
        urls = [
            "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.0.2/bazel-skylib-1.0.2.tar.gz",
            "https://github.com/bazelbuild/bazel-skylib/releases/download/1.0.2/bazel-skylib-1.0.2.tar.gz",
        ],
    )

def _declare_bazel_stardoc():
    """Loads `@bazel_stardoc` if it does not exist.

    Unlike `bazel_stardoc()`, this function does not load any (transitive) dependencies."""

    # `bazel_stardoc` is of type "forward" and does not declare a repository.
    pass

def _declare_bazel_toolchains():
    """Loads `@bazel_toolchains` if it does not exist.

    Unlike `bazel_toolchains()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "bazel_toolchains",
        sha256 = "5962fe677a43226c409316fcb321d668fc4b7fa97cb1f9ef45e7dc2676097b26",
        urls = [
            "https://mirror.bazel.build/github.com/bazelbuild/bazel-toolchains/archive/be10bee3010494721f08a0fccd7f57411a1e773e.tar.gz",
            "https://github.com/bazelbuild/bazel-toolchains/archive/be10bee3010494721f08a0fccd7f57411a1e773e.tar.gz",
        ],
        strip_prefix = "bazel-toolchains-be10bee3010494721f08a0fccd7f57411a1e773e",
    )

def _declare_build_bazel_integration_testing():
    """Loads `@build_bazel_integration_testing` if it does not exist.

    Unlike `build_bazel_integration_testing()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "build_bazel_integration_testing",
        sha256 = "8028ceaad3613404254d6b337f50dc52c0fe77522d0db897f093dd982c6e63ee",
        urls = [
            "https://github.com/bazelbuild/bazel-integration-testing/archive/13a7d5112aaae5572544c609f364d430962784b1.zip",
        ],
        strip_prefix = "bazel-integration-testing-13a7d5112aaae5572544c609f364d430962784b1",
    )

def _declare_build_bazel_rules_nodejs():
    """Loads `@build_bazel_rules_nodejs` if it does not exist.

    Unlike `build_bazel_rules_nodejs()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "build_bazel_rules_nodejs",
        sha256 = "abcf497e89cfc1d09132adfcd8c07526d026e162ae2cb681dcb896046417ce91",
        urls = [
            "https://github.com/bazelbuild/rules_nodejs/releases/download/0.30.1/rules_nodejs-0.30.1.tar.gz",
        ],
    )

def _declare_com_github_bazelbuild_buildtools():
    """Loads `@com_github_bazelbuild_buildtools` if it does not exist.

    Unlike `com_github_bazelbuild_buildtools()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "com_github_bazelbuild_buildtools",
        sha256 = "cdaac537b56375f658179ee2f27813cac19542443f4722b6730d84e4125355e6",
        urls = [
            "https://github.com/bazelbuild/buildtools/archive/f27d1753c8b3210d9e87cdc9c45bc2739ae2c2db.zip",
        ],
        strip_prefix = "buildtools-f27d1753c8b3210d9e87cdc9c45bc2739ae2c2db",
    )

def _declare_com_google_protobuf():
    """Loads `@com_google_protobuf` if it does not exist.

    Unlike `com_google_protobuf()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "com_google_protobuf",
        sha256 = "758249b537abba2f21ebc2d02555bf080917f0f2f88f4cbe2903e0e28c4187ed",
        urls = [
            "https://mirror.bazel.build/github.com/protocolbuffers/protobuf/archive/v3.10.0.tar.gz",
            "https://github.com/protocolbuffers/protobuf/archive/v3.10.0.tar.gz",
        ],
        strip_prefix = "protobuf-3.10.0",
    )

def _declare_com_google_protobuf_cc():
    """Loads `@com_google_protobuf_cc` if it does not exist.

    Unlike `com_google_protobuf_cc()`, this function does not load any (transitive) dependencies."""

    # `com_google_protobuf_cc` is of type "forward" and does not declare a repository.
    pass

def _declare_com_google_protobuf_java():
    """Loads `@com_google_protobuf_java` if it does not exist.

    Unlike `com_google_protobuf_java()`, this function does not load any (transitive) dependencies."""

    # `com_google_protobuf_java` is of type "forward" and does not declare a repository.
    pass

def _declare_com_google_protobuf_javalite():
    """Loads `@com_google_protobuf_javalite` if it does not exist.

    Unlike `com_google_protobuf_javalite()`, this function does not load any (transitive) dependencies."""
    maybe(
        git_repository,
        name = "com_google_protobuf_javalite",
        remote = "https://github.com/protocolbuffers/protobuf.git",
        commit = "7b64714af67aa967dcf941df61fe5207975966be",
    )

def _declare_io_bazel():
    """Loads `@io_bazel` if it does not exist.

    Unlike `io_bazel()`, this function does not load any (transitive) dependencies."""
    maybe(
        git_repository,
        name = "io_bazel",
        remote = "https://github.com/bazelbuild/bazel.git",
        commit = "c689bf93917ad0efa8100b3a0fe1b43f1f1a1cdf",
    )

def _declare_io_bazel_rules_go():
    """Loads `@io_bazel_rules_go` if it does not exist.

    Unlike `io_bazel_rules_go()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "io_bazel_rules_go",
        sha256 = "3cb1bf7f2a3bbd9bed618234a792ce522093138a6298d6d4688b7b8018a49f8b",
        urls = [
            "https://github.com/bazelbuild/rules_go/archive/0c1081b3618a2c6ca1220f7f7ffb644a2955ddf8.zip",
        ],
        strip_prefix = "rules_go-0c1081b3618a2c6ca1220f7f7ffb644a2955ddf8",
    )

def _declare_io_bazel_rules_rust():
    """Loads `@io_bazel_rules_rust` if it does not exist.

    Unlike `io_bazel_rules_rust()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "io_bazel_rules_rust",
        sha256 = "b6da34e057a31b8a85e343c732de4af92a762f804fc36b0baa6c001423a70ebc",
        urls = [
            "https://github.com/bazelbuild/rules_rust/archive/55f77017a7f5b08e525ebeab6e11d8896a4499d2.tar.gz",
        ],
        strip_prefix = "rules_rust-55f77017a7f5b08e525ebeab6e11d8896a4499d2",
    )

def _declare_io_bazel_rules_sass():
    """Loads `@io_bazel_rules_sass` if it does not exist.

    Unlike `io_bazel_rules_sass()`, this function does not load any (transitive) dependencies."""
    maybe(
        git_repository,
        name = "io_bazel_rules_sass",
        remote = "https://github.com/bazelbuild/rules_sass.git",
        commit = "8ccf4f1c351928b55d5dddf3672e3667f6978d60",
    )

def _declare_io_bazel_rules_scala():
    """Loads `@io_bazel_rules_scala` if it does not exist.

    Unlike `io_bazel_rules_scala()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "io_bazel_rules_scala",
        sha256 = "7f35ee7d96b22f6139b81da3a8ba5fb816e1803ed097f7295b85b7a56e4401c7",
        urls = [
            "https://github.com/bazelbuild/rules_scala/archive/300b4369a0a56d9e590d9fea8a73c3913d758e12.zip",
        ],
        strip_prefix = "rules_scala-300b4369a0a56d9e590d9fea8a73c3913d758e12",
    )

def _declare_io_bazel_skydoc():
    """Loads `@io_bazel_skydoc` if it does not exist.

    Unlike `io_bazel_skydoc()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "io_bazel_skydoc",
        sha256 = "c2d66a0cc7e25d857e480409a8004fdf09072a1bd564d6824441ab2f96448eea",
        urls = [
            "https://github.com/bazelbuild/skydoc/archive/0.3.0.tar.gz",
        ],
        strip_prefix = "skydoc-0.3.0",
    )

def _declare_protobuf():
    """Loads `@protobuf` if it does not exist.

    Unlike `protobuf()`, this function does not load any (transitive) dependencies."""

    # `protobuf` is of type "forward" and does not declare a repository.
    pass

def _declare_protobuf_javalite():
    """Loads `@protobuf_javalite` if it does not exist.

    Unlike `protobuf_javalite()`, this function does not load any (transitive) dependencies."""

    # `protobuf_javalite` is of type "forward" and does not declare a repository.
    pass

def _declare_rules_cc():
    """Loads `@rules_cc` if it does not exist.

    Unlike `rules_cc()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "rules_cc",
        sha256 = "8c7e8bf24a2bf515713445199a677ee2336e1c487fa1da41037c6026de04bbc3",
        urls = [
            "https://github.com/bazelbuild/rules_cc/archive/624b5d59dfb45672d4239422fa1e3de1822ee110.zip",
        ],
        strip_prefix = "rules_cc-624b5d59dfb45672d4239422fa1e3de1822ee110",
    )

def _declare_rules_go():
    """Loads `@rules_go` if it does not exist.

    Unlike `rules_go()`, this function does not load any (transitive) dependencies."""

    # `rules_go` is of type "forward" and does not declare a repository.
    pass

def _declare_rules_java():
    """Loads `@rules_java` if it does not exist.

    Unlike `rules_java()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "rules_java",
        sha256 = "220b87d8cfabd22d1c6d8e3cdb4249abd4c93dcc152e0667db061fb1b957ee68",
        urls = [
            "https://mirror.bazel.build/github.com/bazelbuild/rules_java/archive/rules_java-0.1.1.tar.gz",
            "https://github.com/bazelbuild/rules_java/releases/download/0.1.1/rules_java-0.1.1.tar.gz",
        ],
    )

def _declare_rules_nodejs():
    """Loads `@rules_nodejs` if it does not exist.

    Unlike `rules_nodejs()`, this function does not load any (transitive) dependencies."""

    # `rules_nodejs` is of type "forward" and does not declare a repository.
    pass

def _declare_rules_pkg():
    """Loads `@rules_pkg` if it does not exist.

    Unlike `rules_pkg()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "rules_pkg",
        sha256 = "4ba8f4ab0ff85f2484287ab06c0d871dcb31cc54d439457d28fd4ae14b18450a",
        urls = [
            "https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/0.2.4/rules_pkg-0.2.4.tar.gz",
            "https://github.com/bazelbuild/rules_pkg/releases/download/0.2.4/rules_pkg-0.2.4.tar.gz",
        ],
    )

def _declare_rules_proto():
    """Loads `@rules_proto` if it does not exist.

    Unlike `rules_proto()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "rules_proto",
        sha256 = "8fd4bb56703072e093fe2c20c1dc8a2ea92f8d8513b90ab462e1ad4240abc2c8",
        urls = [
            "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/0b96d7d6b4cdee3ef22b8b26a8ce8bf8dcc83478.tar.gz",
            "https://github.com/bazelbuild/rules_proto/archive/0b96d7d6b4cdee3ef22b8b26a8ce8bf8dcc83478.tar.gz",
        ],
        strip_prefix = "rules_proto-0b96d7d6b4cdee3ef22b8b26a8ce8bf8dcc83478",
    )

def _declare_rules_python():
    """Loads `@rules_python` if it does not exist.

    Unlike `rules_python()`, this function does not load any (transitive) dependencies."""
    maybe(
        http_archive,
        name = "rules_python",
        sha256 = "aa96a691d3a8177f3215b14b0edc9641787abaaa30363a080165d06ab65e1161",
        urls = [
            "https://mirror.bazel.build/github.com/bazelbuild/rules_python/releases/download/0.0.1/rules_python-0.0.1.tar.gz",
            "https://github.com/bazelbuild/rules_python/releases/download/0.0.1/rules_python-0.0.1.tar.gz",
        ],
    )

def _declare_rules_rust():
    """Loads `@rules_rust` if it does not exist.

    Unlike `rules_rust()`, this function does not load any (transitive) dependencies."""

    # `rules_rust` is of type "forward" and does not declare a repository.
    pass

def _declare_rules_sass():
    """Loads `@rules_sass` if it does not exist.

    Unlike `rules_sass()`, this function does not load any (transitive) dependencies."""

    # `rules_sass` is of type "forward" and does not declare a repository.
    pass

def _declare_rules_scala():
    """Loads `@rules_scala` if it does not exist.

    Unlike `rules_scala()`, this function does not load any (transitive) dependencies."""

    # `rules_scala` is of type "forward" and does not declare a repository.
    pass

def bazel():
    """Loads `@bazel` and all of its dependencies."""
    _declare_bazel()
    bazel_deps()

def bazel_deps():
    """Loads all dependencies of `@bazel`.

    Note: This function loads only the dependencies of `@bazel`, the repository itself is not loaded.
    Most users should use `bazel()` instead of calling this directly."""
    _declare_io_bazel()

def bazel_gazelle():
    """Loads `@bazel_gazelle` and all of its dependencies."""
    _declare_bazel_gazelle()
    bazel_gazelle_deps()

def bazel_gazelle_deps():
    """Loads all dependencies of `@bazel_gazelle`.

    Note: This function loads only the dependencies of `@bazel_gazelle`, the repository itself is not loaded.
    Most users should use `bazel_gazelle()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_io_bazel_rules_go()
    _declare_rules_go()

def bazel_skylib():
    """Loads `@bazel_skylib` and all of its dependencies."""
    _declare_bazel_skylib()
    bazel_skylib_deps()

def bazel_skylib_deps():
    """Loads all dependencies of `@bazel_skylib`.

    Note: This function loads only the dependencies of `@bazel_skylib`, the repository itself is not loaded.
    Most users should use `bazel_skylib()` instead of calling this directly."""
    pass  # No dependencies

def bazel_stardoc():
    """Loads `@bazel_stardoc` and all of its dependencies."""
    _declare_bazel_stardoc()
    bazel_stardoc_deps()

def bazel_stardoc_deps():
    """Loads all dependencies of `@bazel_stardoc`.

    Note: This function loads only the dependencies of `@bazel_stardoc`, the repository itself is not loaded.
    Most users should use `bazel_stardoc()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_io_bazel_skydoc()
    _declare_rules_java()

def bazel_toolchains():
    """Loads `@bazel_toolchains` and all of its dependencies."""
    _declare_bazel_toolchains()
    bazel_toolchains_deps()

def bazel_toolchains_deps():
    """Loads all dependencies of `@bazel_toolchains`.

    Note: This function loads only the dependencies of `@bazel_toolchains`, the repository itself is not loaded.
    Most users should use `bazel_toolchains()` instead of calling this directly."""
    pass  # No dependencies

def build_bazel_integration_testing():
    """Loads `@build_bazel_integration_testing` and all of its dependencies."""
    _declare_build_bazel_integration_testing()
    build_bazel_integration_testing_deps()

def build_bazel_integration_testing_deps():
    """Loads all dependencies of `@build_bazel_integration_testing`.

    Note: This function loads only the dependencies of `@build_bazel_integration_testing`, the repository itself is not loaded.
    Most users should use `build_bazel_integration_testing()` instead of calling this directly."""
    pass  # No dependencies

def build_bazel_rules_nodejs():
    """Loads `@build_bazel_rules_nodejs` and all of its dependencies."""
    _declare_build_bazel_rules_nodejs()
    build_bazel_rules_nodejs_deps()

def build_bazel_rules_nodejs_deps():
    """Loads all dependencies of `@build_bazel_rules_nodejs`.

    Note: This function loads only the dependencies of `@build_bazel_rules_nodejs`, the repository itself is not loaded.
    Most users should use `build_bazel_rules_nodejs()` instead of calling this directly."""
    pass  # No dependencies

def com_github_bazelbuild_buildtools():
    """Loads `@com_github_bazelbuild_buildtools` and all of its dependencies."""
    _declare_com_github_bazelbuild_buildtools()
    com_github_bazelbuild_buildtools_deps()

def com_github_bazelbuild_buildtools_deps():
    """Loads all dependencies of `@com_github_bazelbuild_buildtools`.

    Note: This function loads only the dependencies of `@com_github_bazelbuild_buildtools`, the repository itself is not loaded.
    Most users should use `com_github_bazelbuild_buildtools()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_io_bazel_rules_go()
    _declare_rules_go()

def com_google_protobuf():
    """Loads `@com_google_protobuf` and all of its dependencies."""
    _declare_com_google_protobuf()
    com_google_protobuf_deps()

def com_google_protobuf_deps():
    """Loads all dependencies of `@com_google_protobuf`.

    Note: This function loads only the dependencies of `@com_google_protobuf`, the repository itself is not loaded.
    Most users should use `com_google_protobuf()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_com_google_protobuf_javalite()
    _declare_protobuf_javalite()
    _declare_rules_cc()
    _declare_rules_java()
    _declare_rules_proto()
    _declare_rules_python()
    _declare_zlib()

def com_google_protobuf_cc():
    """Loads `@com_google_protobuf_cc` and all of its dependencies."""
    _declare_com_google_protobuf_cc()
    com_google_protobuf_cc_deps()

def com_google_protobuf_cc_deps():
    """Loads all dependencies of `@com_google_protobuf_cc`.

    Note: This function loads only the dependencies of `@com_google_protobuf_cc`, the repository itself is not loaded.
    Most users should use `com_google_protobuf_cc()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_com_google_protobuf()
    _declare_com_google_protobuf_javalite()
    _declare_protobuf_javalite()
    _declare_rules_cc()
    _declare_rules_java()
    _declare_rules_proto()
    _declare_rules_python()
    _declare_zlib()

def com_google_protobuf_java():
    """Loads `@com_google_protobuf_java` and all of its dependencies."""
    _declare_com_google_protobuf_java()
    com_google_protobuf_java_deps()

def com_google_protobuf_java_deps():
    """Loads all dependencies of `@com_google_protobuf_java`.

    Note: This function loads only the dependencies of `@com_google_protobuf_java`, the repository itself is not loaded.
    Most users should use `com_google_protobuf_java()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_com_google_protobuf()
    _declare_com_google_protobuf_javalite()
    _declare_protobuf_javalite()
    _declare_rules_cc()
    _declare_rules_java()
    _declare_rules_proto()
    _declare_rules_python()
    _declare_zlib()

def com_google_protobuf_javalite():
    """Loads `@com_google_protobuf_javalite` and all of its dependencies."""
    _declare_com_google_protobuf_javalite()
    com_google_protobuf_javalite_deps()

def com_google_protobuf_javalite_deps():
    """Loads all dependencies of `@com_google_protobuf_javalite`.

    Note: This function loads only the dependencies of `@com_google_protobuf_javalite`, the repository itself is not loaded.
    Most users should use `com_google_protobuf_javalite()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_com_google_protobuf()
    _declare_protobuf_javalite()
    _declare_rules_cc()
    _declare_rules_java()
    _declare_rules_proto()
    _declare_rules_python()
    _declare_zlib()

def io_bazel():
    """Loads `@io_bazel` and all of its dependencies."""
    _declare_io_bazel()
    io_bazel_deps()

def io_bazel_deps():
    """Loads all dependencies of `@io_bazel`.

    Note: This function loads only the dependencies of `@io_bazel`, the repository itself is not loaded.
    Most users should use `io_bazel()` instead of calling this directly."""
    pass  # No dependencies

def io_bazel_rules_go():
    """Loads `@io_bazel_rules_go` and all of its dependencies."""
    _declare_io_bazel_rules_go()
    io_bazel_rules_go_deps()

def io_bazel_rules_go_deps():
    """Loads all dependencies of `@io_bazel_rules_go`.

    Note: This function loads only the dependencies of `@io_bazel_rules_go`, the repository itself is not loaded.
    Most users should use `io_bazel_rules_go()` instead of calling this directly."""
    _declare_bazel_skylib()

def io_bazel_rules_rust():
    """Loads `@io_bazel_rules_rust` and all of its dependencies."""
    _declare_io_bazel_rules_rust()
    io_bazel_rules_rust_deps()

def io_bazel_rules_rust_deps():
    """Loads all dependencies of `@io_bazel_rules_rust`.

    Note: This function loads only the dependencies of `@io_bazel_rules_rust`, the repository itself is not loaded.
    Most users should use `io_bazel_rules_rust()` instead of calling this directly."""
    _declare_bazel_skylib()

def io_bazel_rules_sass():
    """Loads `@io_bazel_rules_sass` and all of its dependencies."""
    _declare_io_bazel_rules_sass()
    io_bazel_rules_sass_deps()

def io_bazel_rules_sass_deps():
    """Loads all dependencies of `@io_bazel_rules_sass`.

    Note: This function loads only the dependencies of `@io_bazel_rules_sass`, the repository itself is not loaded.
    Most users should use `io_bazel_rules_sass()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_build_bazel_rules_nodejs()
    _declare_rules_nodejs()

def io_bazel_rules_scala():
    """Loads `@io_bazel_rules_scala` and all of its dependencies."""
    _declare_io_bazel_rules_scala()
    io_bazel_rules_scala_deps()

def io_bazel_rules_scala_deps():
    """Loads all dependencies of `@io_bazel_rules_scala`.

    Note: This function loads only the dependencies of `@io_bazel_rules_scala`, the repository itself is not loaded.
    Most users should use `io_bazel_rules_scala()` instead of calling this directly."""
    _declare_bazel_skylib()

def io_bazel_skydoc():
    """Loads `@io_bazel_skydoc` and all of its dependencies."""
    _declare_io_bazel_skydoc()
    io_bazel_skydoc_deps()

def io_bazel_skydoc_deps():
    """Loads all dependencies of `@io_bazel_skydoc`.

    Note: This function loads only the dependencies of `@io_bazel_skydoc`, the repository itself is not loaded.
    Most users should use `io_bazel_skydoc()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_rules_java()

def jinja2():
    """Loads `@jinja2` and all of its dependencies."""
    _declare_jinja2()
    jinja2_deps()

def jinja2_deps():
    """Loads all dependencies of `@jinja2`.

    Note: This function loads only the dependencies of `@jinja2`, the repository itself is not loaded.
    Most users should use `jinja2()` instead of calling this directly."""
    pass  # No dependencies

def markupsafe():
    """Loads `@markupsafe` and all of its dependencies."""
    _declare_markupsafe()
    markupsafe_deps()

def markupsafe_deps():
    """Loads all dependencies of `@markupsafe`.

    Note: This function loads only the dependencies of `@markupsafe`, the repository itself is not loaded.
    Most users should use `markupsafe()` instead of calling this directly."""
    pass  # No dependencies

def mistune():
    """Loads `@mistune` and all of its dependencies."""
    _declare_mistune()
    mistune_deps()

def mistune_deps():
    """Loads all dependencies of `@mistune`.

    Note: This function loads only the dependencies of `@mistune`, the repository itself is not loaded.
    Most users should use `mistune()` instead of calling this directly."""
    pass  # No dependencies

def org_golang_x_sys():
    """Loads `@org_golang_x_sys` and all of its dependencies."""
    _declare_org_golang_x_sys()
    org_golang_x_sys_deps()

def org_golang_x_sys_deps():
    """Loads all dependencies of `@org_golang_x_sys`.

    Note: This function loads only the dependencies of `@org_golang_x_sys`, the repository itself is not loaded.
    Most users should use `org_golang_x_sys()` instead of calling this directly."""
    pass  # No dependencies

def org_golang_x_tools():
    """Loads `@org_golang_x_tools` and all of its dependencies."""
    _declare_org_golang_x_tools()
    org_golang_x_tools_deps()

def org_golang_x_tools_deps():
    """Loads all dependencies of `@org_golang_x_tools`.

    Note: This function loads only the dependencies of `@org_golang_x_tools`, the repository itself is not loaded.
    Most users should use `org_golang_x_tools()` instead of calling this directly."""
    pass  # No dependencies

def protobuf():
    """Loads `@protobuf` and all of its dependencies."""
    _declare_protobuf()
    protobuf_deps()

def protobuf_deps():
    """Loads all dependencies of `@protobuf`.

    Note: This function loads only the dependencies of `@protobuf`, the repository itself is not loaded.
    Most users should use `protobuf()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_com_google_protobuf()
    _declare_com_google_protobuf_javalite()
    _declare_protobuf_javalite()
    _declare_rules_cc()
    _declare_rules_java()
    _declare_rules_proto()
    _declare_rules_python()
    _declare_zlib()

def protobuf_javalite():
    """Loads `@protobuf_javalite` and all of its dependencies."""
    _declare_protobuf_javalite()
    protobuf_javalite_deps()

def protobuf_javalite_deps():
    """Loads all dependencies of `@protobuf_javalite`.

    Note: This function loads only the dependencies of `@protobuf_javalite`, the repository itself is not loaded.
    Most users should use `protobuf_javalite()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_com_google_protobuf()
    _declare_com_google_protobuf_javalite()
    _declare_rules_cc()
    _declare_rules_java()
    _declare_rules_proto()
    _declare_rules_python()
    _declare_zlib()

def rules_cc():
    """Loads `@rules_cc` and all of its dependencies."""
    _declare_rules_cc()
    rules_cc_deps()

def rules_cc_deps():
    """Loads all dependencies of `@rules_cc`.

    Note: This function loads only the dependencies of `@rules_cc`, the repository itself is not loaded.
    Most users should use `rules_cc()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_com_google_protobuf()
    _declare_com_google_protobuf_javalite()
    _declare_protobuf_javalite()
    _declare_rules_java()
    _declare_rules_proto()
    _declare_rules_python()
    _declare_zlib()

def rules_go():
    """Loads `@rules_go` and all of its dependencies."""
    _declare_rules_go()
    rules_go_deps()

def rules_go_deps():
    """Loads all dependencies of `@rules_go`.

    Note: This function loads only the dependencies of `@rules_go`, the repository itself is not loaded.
    Most users should use `rules_go()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_io_bazel_rules_go()

def rules_java():
    """Loads `@rules_java` and all of its dependencies."""
    _declare_rules_java()
    rules_java_deps()

def rules_java_deps():
    """Loads all dependencies of `@rules_java`.

    Note: This function loads only the dependencies of `@rules_java`, the repository itself is not loaded.
    Most users should use `rules_java()` instead of calling this directly."""
    _declare_bazel_skylib()

def rules_nodejs():
    """Loads `@rules_nodejs` and all of its dependencies."""
    _declare_rules_nodejs()
    rules_nodejs_deps()

def rules_nodejs_deps():
    """Loads all dependencies of `@rules_nodejs`.

    Note: This function loads only the dependencies of `@rules_nodejs`, the repository itself is not loaded.
    Most users should use `rules_nodejs()` instead of calling this directly."""
    _declare_build_bazel_rules_nodejs()

def rules_pkg():
    """Loads `@rules_pkg` and all of its dependencies."""
    _declare_rules_pkg()
    rules_pkg_deps()

def rules_pkg_deps():
    """Loads all dependencies of `@rules_pkg`.

    Note: This function loads only the dependencies of `@rules_pkg`, the repository itself is not loaded.
    Most users should use `rules_pkg()` instead of calling this directly."""
    pass  # No dependencies

def rules_proto():
    """Loads `@rules_proto` and all of its dependencies."""
    _declare_rules_proto()
    rules_proto_deps()

def rules_proto_deps():
    """Loads all dependencies of `@rules_proto`.

    Note: This function loads only the dependencies of `@rules_proto`, the repository itself is not loaded.
    Most users should use `rules_proto()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_com_google_protobuf()
    _declare_com_google_protobuf_javalite()
    _declare_protobuf_javalite()
    _declare_rules_cc()
    _declare_rules_java()
    _declare_rules_python()
    _declare_zlib()

def rules_python():
    """Loads `@rules_python` and all of its dependencies."""
    _declare_rules_python()
    rules_python_deps()

def rules_python_deps():
    """Loads all dependencies of `@rules_python`.

    Note: This function loads only the dependencies of `@rules_python`, the repository itself is not loaded.
    Most users should use `rules_python()` instead of calling this directly."""
    pass  # No dependencies

def rules_rust():
    """Loads `@rules_rust` and all of its dependencies."""
    _declare_rules_rust()
    rules_rust_deps()

def rules_rust_deps():
    """Loads all dependencies of `@rules_rust`.

    Note: This function loads only the dependencies of `@rules_rust`, the repository itself is not loaded.
    Most users should use `rules_rust()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_io_bazel_rules_rust()

def rules_sass():
    """Loads `@rules_sass` and all of its dependencies."""
    _declare_rules_sass()
    rules_sass_deps()

def rules_sass_deps():
    """Loads all dependencies of `@rules_sass`.

    Note: This function loads only the dependencies of `@rules_sass`, the repository itself is not loaded.
    Most users should use `rules_sass()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_build_bazel_rules_nodejs()
    _declare_io_bazel_rules_sass()
    _declare_rules_nodejs()

def rules_scala():
    """Loads `@rules_scala` and all of its dependencies."""
    _declare_rules_scala()
    rules_scala_deps()

def rules_scala_deps():
    """Loads all dependencies of `@rules_scala`.

    Note: This function loads only the dependencies of `@rules_scala`, the repository itself is not loaded.
    Most users should use `rules_scala()` instead of calling this directly."""
    _declare_bazel_skylib()
    _declare_io_bazel_rules_scala()

def zlib():
    """Loads `@zlib` and all of its dependencies."""
    _declare_zlib()
    zlib_deps()

def zlib_deps():
    """Loads all dependencies of `@zlib`.

    Note: This function loads only the dependencies of `@zlib`, the repository itself is not loaded.
    Most users should use `zlib()` instead of calling this directly."""
    pass  # No dependencies
